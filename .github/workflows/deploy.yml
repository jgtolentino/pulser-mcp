name: Deploy MCP Server

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx
      
      - name: Run tests
        run: |
          pytest tests/ -v

  deploy-vercel:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-azure:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Build and push to ACR
        run: |
          # Login to ACR
          az acr login --name ${{ secrets.ACR_NAME }}
          
          # Build and push
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/pulser-mcp-server:${{ github.sha }} .
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/pulser-mcp-server:${{ github.sha }}
      
      - name: Deploy to Azure Container Instance
        run: |
          az container create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name pulser-mcp-server \
            --image ${{ secrets.ACR_NAME }}.azurecr.io/pulser-mcp-server:${{ github.sha }} \
            --dns-name-label pulser-mcp \
            --ports 8000 \
            --environment-variables \
              DATABASE_URL=${{ secrets.DATABASE_URL }} \
              JWT_SECRET=${{ secrets.JWT_SECRET }} \
              AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }} \
              AZURE_OPENAI_KEY=${{ secrets.AZURE_OPENAI_KEY }}

  deploy-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/pulser-mcp-server:latest
            ${{ secrets.DOCKER_USERNAME }}/pulser-mcp-server:${{ github.sha }}